// SQUISH'S LEFTWM CONFIG
// this is the non-aesthetic configuration file - keybinds, tags, rules

#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
(
  modkey: "Mod4",
  mousekey: "Mod4",

  // workspaces: [],

  tags: [
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
  ],

  max_window_width: None,

  layouts: [
    "MainAndVertStack",
    "Monocle",
  ],


  layout_mode: Tag,
  insert_behavior: Bottom,
  window_rules: [],
  disable_current_tag_swap: false,
  disable_tile_drag: false,
  disable_window_snap: true,
  focus_behaviour: Sloppy,
  focus_new_windows: true,
  single_window_border: true,
  sloppy_mouse_follows_focus: true,
  create_follows_cursor: None,
  auto_derive_workspaces: true,
  disable_cursor_reposition_on_resize: false,


  // window_rules: [
  // ( window_title: "wezterm", spawn_floating: false ),
  // ( window_title: "floorp", spawn_on_tag: 9, spawn_floating: false ),
    // windows whose WM_CLASS matches "*.app_2.*" regular expression will be spawn on tag 2
  // ( window_class: "*.app_2*", spawn_on_tag: 2 ),
  // ],

  scratchpad: [

    (
      name: "terminal",
      value: "wezterm",
      x: 50,
      y: 50,
      height: 100,
      width: 100,
    ),

    // (
    //   name: "keybindings",
    //   value: "glow -p ~/documents/notes/LeftWM Keybinds.md",
    //   x: 60,
    //   width: 1800,
    // ),

    // (
    //   name: "tasks",
    //   value: "taskwarrior-tui"
    // ),

  ],

  keybind: [

    // reload LeftWM
  (command: SoftReload,
      value: "",
      modifier: ["modkey", "Shift"],
      key: "r"),

    // reload LeftWM when it's fucking up
  (command: HardReload,
      value: "",
      modifier: ["modkey", "Shift", "Control"],
      key: "r"),


    // open terminal
  (command: Execute,
      value: "wezterm",
      modifier: ["modkey"],
      key: "Return"),

    // open program
  (command: Execute,
      value: "rofi -show drun -theme ~/.config/rofi/rofi.rasi",
      modifier: ["modkey", "Shift"],
      key: "Return"),

    // switch window
  (command: Execute,
      value: "rofi -show window -theme ~/.config/rofi/window.rasi",
      modifier: ["Alt"],
      key: "Tab"),

    // open browser
  (command: Execute,
      value: "floorp",
      modifier: ["modkey"],
      key: "b"),

    // screenshot!
  (command: Execute,
      value: "flameshot gui",
      modifier: "",
      key: "Print"),

    // volume
  (command: Execute,
      value: "pactl set-sink-volume @DEFAULT_SINK@ -2%",
      modifier: "",
      key: "XF86AudioLowerVolume",),

  (command: Execute,
      value: "pactl set-sink-volume @DEFAULT_SINK@ +2%",
      modifier: "",
      key: "XF86AudioRaiseVolume",),

  (command: Execute,
      value: "pactl set-sink-mute @DEFAULT_SINK@ toggle",
      modifier: "",
      key: "XF86AudioMute",),

    // control window size
  (command: IncreaseMainWidth,
      value: "5",
      modifier: ["modkey", "Shift"],
      key: "l"),
  (command: DecreaseMainWidth,
      value: "5",
      modifier: ["modkey", "Shift"],
      key: "h"),

    // window properties (floating, fullscreen, close)
  (command: ToggleFloating,
      modifier: ["modkey"],
      key: "g"),
  (command: ToggleFullScreen,
      modifier: ["modkey"],
      key: "f"),
  (command: CloseWindow,
      value: "",
      modifier: ["modkey"],
      key: "w"),

    // moving windows
  (command: MoveWindowUp,
      value: "",
      modifier: ["modkey", "Shift"],
      key: "k"),
  (command: MoveWindowDown,
      value: "",
      modifier: ["modkey", "Shift"],
      key: "j"),

    // choosing windows
  (command: FocusWindowUp,
      value: "",
      modifier: ["modkey"],
      key: "k"),
  (command: FocusWindowDown,
      value: "",
      modifier: ["modkey"],
      key: "j"),

    // switching window layout (one or split)
  (command: NextLayout,
      value: "",
      modifier: ["modkey"],
      key: "Tab"),

  (command: GotoTag, value: "1", modifier: ["modkey"], key: "1"),
  (command: GotoTag, value: "2", modifier: ["modkey"], key: "2"),
  (command: GotoTag, value: "3", modifier: ["modkey"], key: "3"),
  (command: GotoTag, value: "4", modifier: ["modkey"], key: "4"),
  (command: GotoTag, value: "5", modifier: ["modkey"], key: "5"),
  (command: GotoTag, value: "6", modifier: ["modkey"], key: "6"),
  (command: GotoTag, value: "7", modifier: ["modkey"], key: "7"),
  (command: GotoTag, value: "8", modifier: ["modkey"], key: "8"),
  (command: GotoTag, value: "9", modifier: ["modkey"], key: "9"),

  (command: MoveToTag, value: "1", modifier: ["modkey", "Shift"], key: "1"),
  (command: MoveToTag, value: "2", modifier: ["modkey", "Shift"], key: "2"),
  (command: MoveToTag, value: "3", modifier: ["modkey", "Shift"], key: "3"),
  (command: MoveToTag, value: "4", modifier: ["modkey", "Shift"], key: "4"),
  (command: MoveToTag, value: "5", modifier: ["modkey", "Shift"], key: "5"),
  (command: MoveToTag, value: "6", modifier: ["modkey", "Shift"], key: "6"),
  (command: MoveToTag, value: "7", modifier: ["modkey", "Shift"], key: "7"),
  (command: MoveToTag, value: "8", modifier: ["modkey", "Shift"], key: "8"),
  (command: MoveToTag, value: "9", modifier: ["modkey", "Shift"], key: "9"),

  (command: ToggleScratchPad,
      value: "terminal",
      modifier: ["modkey"],
      key: "p"),

  (command: ToggleScratchPad,
      value: "keybindings",
      modifier: ["modkey"],
      key: "s"),

  (command: ToggleScratchPad,
      value: "tasks",
      modifier: ["modkey"],
      key: "t"),

  ],
  state_path: None,
)
