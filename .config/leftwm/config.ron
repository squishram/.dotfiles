// SQUISH'S LEFTWM CONFIG
// this is the non-aesthetic configuration file - keybinds, tags, rules

#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
(
  modkey: "Mod4",
  mousekey: "Mod4",

  // workspaces: [],

  tags: [
    "1",
    "2",
    "3",
    "4",
    "5",
  ],

  max_window_width: None,

  layouts: [
    "MainAndVertStack",
    "Monocle",
  ],


  layout_mode: Tag,
  window_rules: [],
  disable_current_tag_swap: false,
  disable_tile_drag: false,
  disable_window_snap: true,
  focus_behaviour: Sloppy,
  focus_new_windows: true,
  single_window_border: true,
  sloppy_mouse_follows_focus: true,
  create_follows_cursor: None,
  auto_derive_workspaces: true,
  disable_cursor_reposition_on_resize: false,

  scratchpad: [

    (name: "terminal",
      value: "wezterm",
      x: 10, y: 70, height: 1000, width: 1000
    ),

    (name: "tasks",
      value: "wezterm -e taskwarrior-tui",
      x: 10, y: 70, height: 100, width: 1900
    ),

    (name: "spotify",
      value: "spotify-launcher",
      x: 10, y: 70, height: 1400, width: 1900
    ),

    // (name: "keybinds",
    //   value: "wezterm -e glow -p ~/documents/notes/LeftWM Keybinds.md",
    //   x: 50.0, y: 10.0, height: 90.0, width: 100.0
    // )

  ],

  keybind: [

    // reload LeftWM
  (command: SoftReload,
      value: "",
      modifier: ["modkey", "Shift"],
      key: "r"),

    // reload LeftWM when it's fucking up
  (command: HardReload,
      value: "",
      modifier: ["modkey", "Shift", "Control"],
      key: "r"),


    // open terminal
  (command: Execute,
      value: "wezterm",
      modifier: ["modkey"],
      key: "Return"),

    // open program
  (command: Execute,
      value: "rofi -show drun -theme ~/.config/rofi/drun.rasi -matching fuzzy",
      modifier: ["modkey", "Shift"],
      key: "Return"),

    // power menu
  (command: Execute,
      value: "rofi -show power-menu -modi power-menu:rofi-power-menu -theme ~/.config/rofi/logout.rasi -matching fuzzy",
      modifier: ["modkey"],
      key: "q"),

    // switch window
  (command: Execute,
      value: "rofi -show window -theme ~/.config/rofi/window.rasi",
      modifier: ["Alt"],
      key: "Tab"),

    // open browser
  (command: Execute,
      value: "floorp",
      modifier: ["modkey"],
      key: "b"),

    // screenshot!
  (command: Execute,
      value: "flameshot gui",
      key: "Print"),

    // volume
  (command: Execute,
      value: "pactl set-sink-volume @DEFAULT_SINK@ -2%",
      key: "XF86AudioLowerVolume",),

  (command: Execute,
      value: "pactl set-sink-volume @DEFAULT_SINK@ +2%",
      key: "XF86AudioRaiseVolume",),

  (command: Execute,
      value: "pactl set-sink-mute @DEFAULT_SINK@ toggle",
      key: "XF86AudioMute",),

    // control window size
  (command: IncreaseMainWidth,
      value: "5",
      modifier: ["modkey", "Shift"],
      key: "l"),
  (command: DecreaseMainWidth,
      value: "5",
      modifier: ["modkey", "Shift"],
      key: "h"),

    // window properties (floating, fullscreen, close)
  (command: ToggleFloating,
      modifier: ["modkey"],
      key: "g"),
  (command: ToggleFullScreen,
      modifier: ["modkey"],
      key: "f"),
  (command: CloseWindow,
      value: "",
      modifier: ["modkey"],
      key: "w"),

    // moving windows
  (command: MoveWindowUp,
      value: "",
      modifier: ["modkey", "Shift"],
      key: "k"),
  (command: MoveWindowDown,
      value: "",
      modifier: ["modkey", "Shift"],
      key: "j"),

    // choosing windows
  (command: FocusWindowUp,
      value: "",
      modifier: ["modkey"],
      key: "k"),
  (command: FocusWindowDown,
      value: "",
      modifier: ["modkey"],
      key: "j"),

    // switching window layout 
  (command: NextLayout,
      value: "",
      modifier: ["modkey"],
      key: "Tab"),

  // scroll through tags, ignoring empty ones
  (command: FocusNextTag, value: "goto_used", modifier: ["modkey"], key: "l"),
  (command: FocusPreviousTag, value: "goto_used", modifier: ["modkey"], key: "h"),

  // go to specific tag
  (command: GotoTag, value: "1", modifier: ["modkey"], key: "1"),
  (command: GotoTag, value: "2", modifier: ["modkey"], key: "2"),
  (command: GotoTag, value: "3", modifier: ["modkey"], key: "3"),
  (command: GotoTag, value: "4", modifier: ["modkey"], key: "4"),
  (command: GotoTag, value: "5", modifier: ["modkey"], key: "5"),
  (command: GotoTag, value: "6", modifier: ["modkey"], key: "6"),
  (command: GotoTag, value: "7", modifier: ["modkey"], key: "7"),
  (command: GotoTag, value: "8", modifier: ["modkey"], key: "8"),
  (command: GotoTag, value: "9", modifier: ["modkey"], key: "9"),

  (command: MoveToTag, value: "1", modifier: ["modkey", "Shift"], key: "1"),
  (command: MoveToTag, value: "2", modifier: ["modkey", "Shift"], key: "2"),
  (command: MoveToTag, value: "3", modifier: ["modkey", "Shift"], key: "3"),
  (command: MoveToTag, value: "4", modifier: ["modkey", "Shift"], key: "4"),
  (command: MoveToTag, value: "5", modifier: ["modkey", "Shift"], key: "5"),
  (command: MoveToTag, value: "6", modifier: ["modkey", "Shift"], key: "6"),
  (command: MoveToTag, value: "7", modifier: ["modkey", "Shift"], key: "7"),
  (command: MoveToTag, value: "8", modifier: ["modkey", "Shift"], key: "8"),
  (command: MoveToTag, value: "9", modifier: ["modkey", "Shift"], key: "9"),

  (command: ToggleScratchPad,
      value: "terminal",
      modifier: ["modkey"],
      key: "o"),

  (command: ToggleScratchPad,
      value: "spotify",
      modifier: ["modkey"],
      key: "s"),

  // (command: ToggleScratchPad,
  //     value: "keybindings",
  //     modifier: ["modkey"],
  //     key: "s"),

  (command: ToggleScratchPad,
      value: "tasks",
      modifier: ["modkey"],
      key: "t"),

  ],
)
