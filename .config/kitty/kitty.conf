# ==== SQUISHRAM'S KITTY CONFIG FILE ==== #

# ==== MISC ==== #
# Shell used (. for default)
shell .
# Editor used (. for default)
editor .
# Close the window when the shell exits
close_on_child_death no
# Allow other programs to control kitty
allow_remote_control no
# Where to listen (if remote control is on)
listen_on unix:@mykitty
# How often to check if there is an update to kitty
update_check_interval 0
# Path to a session file for all instances of kitty
startup_session none
# Allow programs running in kitty to read and write from the clipboa
clipboard_control write-clipboard write-primary
# Just don't fuck with this one, it is beyond your abilities
term xterm-kitty
# (X11|Wayland|auto) (obviously just do auto)
linux_display_server auto

# ==== FONT ==== #
font_family ComicShannsMono Nerd Font
# font_family CaskaydiaCove Nerd Font Complete
bold_font auto
italic_font auto
bold_italic_font auto
# size of font
font_size 13.0
# disable ligatures like => if available
disable_ligatures never
# relative height of underlines
modify_font underline_position 2
# relative thickness of underlines
modify_font underline_thickness 120%
# relative height of the strikethrough
modify_font strikethrough_position 2px
# relative cell dimensions
modify_font cell_width 100%
modify_font cell_height 125%
# cursor elevation relative to cell
modify_font baseline 0
# The sizes of the lines used for the box drawing Unicode characters
# The four values correspond to thin, normal, thick, and very thick lines.
box_drawing_scale 0.001, 1, 1.5, 2
# Thickness (thin|thick) and oscillation frequency (sparse|dense) of undercurl
undercurl_style thin-sparse

# ==== CURSOR ==== #
# block, beam, or underline
cursor_shape block
# The interval to blink the cursor <0 = default, 0 = noblink, >0 = in seconds
cursor_blink_interval -1
# Stop blinking cursor after the specified number of seconds of keyboard inactivity
cursor_stop_blinking_after 15.0

# ==== SCROLLBACK ==== #
# Number of lines of history to keep in memory for scrolling back
scrollback_lines 2000
# Default pager used for viewing documents in a new page (usually less/ bat with paging)
# +INPUT_LINE_NUMBER is should be the starting line number of the paged document (integer)
# scrollback_pager less --chop-long-lines +INPUT_LINE_NUMBER
scrollback_pager bat --paging=always --chop-long-lines +0
# Amount of memory to be held in pager display - 0 to disable
scrollback_pager_history_size 0
# Fill new space with lines from the scrollback buffer after enlarging a window
scrollback_fill_enlarged_window no
# lines scrolled by mouse wheel/ touch pad
wheel_scroll_multiplier 5.0
touch_scroll_multiplier 1.0

# ==== MOUSE ==== #
# Hide mouse cursor after the specified number of seconds of the mouse not being used
mouse_hide_wait 3.0
# style change when mousing over URL (none|straight|double|curly|dotted|dashed)
# https://facebook.com
url_style straight
# program to open URL
open_url_with default
# The set of URL prefixes to look for when detecting a URL under the mouse cursor
url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
# Detect URLs under the mouse
detect_urls yes
# Show the actual URL that will be activated when the hyperlink is clicked on hover
show_hyperlink_targets yes
# Control how hyperlinks are underlined (hover|always|never)
underline_hyperlinks hover
# Copy selection automatically, to a clipboard or private buffer (clipboard|a1|b3|no)
copy_on_select clipboard
# A comma separated list of actions to take when pasting text into the terminal:
# quote-urls-at-prompt: automatically quote URLs (needs shell_integration).
# replace-dangerous-control-codes: automatically replace dangerous control codes from pasted text
# replace-newline: replace the newline character from pasted text, without confirmation.
# confirm: user confirm if the text to be pasted contains dangerous terminal control codes
# confirm-if-large: confirm the paste if it is very large (larger than 16KB)
paste_actions quote-urls-at-prompt,replace-newline,confirm-if-large,confirm
# Remove spaces at the end of lines when copying to clipboard (smart|always|never)
# Where a value of smart will do it when using normal selections
strip_trailing_spaces smart
# Characters considered part of a word when double clicking
select_by_word_characters :@-./_~?&=%+#
# The interval for double/triple clicks (in seconds), negative numbers to fallback to system
click_interval -1.0
# handled by most tiling window managers
focus_follows_mouse no
# The shape of the mouse pointer when the program running in the terminal grabs the mouse.
pointer_shape_when_grabbed arrow
# The default shape of the mouse pointer.
default_pointer_shape beam
# The default shape of the mouse pointer when dragging across text.
pointer_shape_when_dragging beam


# ==== PERFORMANCE ==== #
# NOTE: don't change these without consulting documentation as they are performance-optimised
# Delay between screen updates (in ms) (default=10)
repaint_delay 10
# Delay before input from the program running in the terminal is processed (in ms)
input_delay 3
# "yes" if you see screen tearing while scrolling, "no" if you see input latency
sync_to_monitor yes

# ==== BELLS ==== #
# turn off dat stinky bell
enable_audio_bell no
# duration of screen flash when there's an error (0.0 to disable)
visual_bell_duration 1.0
# demand my attention if something's happened (e.g. window manager indicator)
window_alert_on_bell yes
# Text to show on the tab if a window in the tab that does not have focus has a bell.
bell_on_tab "üîî "
# Program to run when a bell occurs
command_on_bell none
# Path to a sound file to play as the bell sound. 
bell_path none

# ==== WINDOW (PANE) LAYOUT ==== #
# list of available layouts to flip between
enabled_layouts tall, fat, stack
# whether to open window same size as last instance
remember_window_size no
# window dimensions if first instance
initial_window_width  640
initial_window_height 400
# amount by which to resize windows on single-step adjustment
window_resize_step_cells 2
window_resize_step_lines 2
# Thickness separating windows (i.e. panes)
window_border_width 1.0
# Only the borders that separate the window from a neighbor are drawn
draw_minimal_borders yes
# The window margin (in pts) (blank area outside the border) with multiple panes
window_margin_width 0.0
# The window margin to use when only a single pane is visible (in pts)
single_window_margin_width 0.0
# The window padding (in pts) (blank area between the text and the window border)
window_padding_width 10.0
# The window padding to use when only a single window is visible (in pts)
single_window_padding_width -1
# no idea about this but "center" is the default value
placement_strategy center
# fading of inactive panes (0 for fully faded)
inactive_text_alpha 1.0
# Hide the window decorations (title-bar and window borders) with yes
hide_window_decorations yes
# The time (s) before asking the program running in kitty to resize and redraw the screen
resize_debounce_time 0.1
# Resize the OS window in cell-size (instead of pixel-size) steps
resize_in_steps no
# Check before shutting it doooown!
confirm_os_window_close 1


# ==== TAB BAR ==== #
# The edge to show the tab bar on, top or bottom.
tab_bar_edge top
# The margin to the left and right of the tab bar (in pts).
tab_bar_margin_width 10.0
# The margin above and below the tab bar (in pts), respectively
tab_bar_margin_height 0.0 0.0
# fade: tabs fade into each other
# slant: tabs look like the tabs in a physical file.
# separator: tabs are separated by a configurable separator. (see tab_separator)
# powerline: tabs are shown as a continuous line with ‚Äúfancy‚Äù separators. (See tab_powerline_style)
tab_bar_style powerline
# tab placement (left|center|right)
tab_bar_align center
# only show tab bar when this many tabs are present
tab_bar_min_tabs 2
# Where to switch when the current tab is closed (previous|left|right|last)
tab_switch_strategy left
# The separator between tabs in the tab bar when using separator as the tab_bar_style.
tab_separator " ‚îá"
# The powerline separator style (angled|slanted|round)
tab_powerline_style slanted
# The fade separator severity
tab_fade 1

# Format of the tab titles:
# title: The current tab title.
# index: The tab index usable with goto_tab N shortcuts.
# layout_name: The current layout name.
# num_windows: The number of windows in the tab.
# num_window_groups: The number of window groups (a window group is a window and all of its overlay windows) in the tab.
# tab.active_wd: The working directory of the currently active window in the tab (expensive, requires syscall). Use active_oldest_wd to get the directory of the oldest foreground process rather than the newest.
# tab.active_exe: The name of the executable running in the foreground of the currently active window in the tab (expensive, requires syscall). Use active_oldest_exe for the oldest foreground process.
# max_title_length: The maximum title length available.
# Note that formatting is done by Python‚Äôs string formatting machinery, so you can use, for instance, {layout_name[:2].upper()} to show only the first two letters of the layout name, upper-cased. If you want to style the text, you can use styling directives, for example: {fmt.fg.red}red{fmt.fg.tab}normal{fmt.bg._00FF00}greenbg{fmt.bg.tab}. Similarly, for bold and italic: {fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}. Note that for backward compatibility, if {bell_symbol} or {activity_symbol} are not present in the template, they are prepended to it.
tab_title_template "{title}"
# amount of background blocked by the kitty window
background_opacity 1.0
# allow opacity to be changed with keyboard shortcuts
dynamic_background_opacity no

# ==== KEYBINDS ==== #
include ~/.config/kitty/keybinds.conf

# ==== THEME ==== #
include ~/.config/kitty/colours/catppuccin_frappe_1.conf
